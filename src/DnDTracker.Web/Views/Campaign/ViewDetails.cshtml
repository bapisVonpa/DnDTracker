@{
    var campaignGuidStr = Context.Request.Query["campaignGuid"][0];
    var persister = Singleton.Get<DynamoDbPersister>();
    Guid.TryParse(campaignGuidStr, out var campaignGuid);
    var userGuidStr = Singleton.Get<SessionService>().Get("UserGuid", "", HttpContextAccessor);
    Guid.TryParse(userGuidStr, out var userGuid);
    var campaignObj = persister.Get<CampaignObject>(campaignGuid);

    ViewData["Title"] = campaignObj?.Name ?? "";
}

<div id="view-campaign-page">
    <h2 class="text-center">Campaign Details</h2>
    <div class="column-container full-height" id="view-campaign__desktop">
        <div class="column">
            <div class="banner">
                <div class="banner-content">
                    <div class="column-container no-gutters">
                        <div class="column no-gutters">
                            <h3>Campaign</h3>
                            <p>@campaignObj.Name</p>
                        </div>
                        <div class="column no-gutters text-right">
                            <h3>Join Code</h3>
                            <p class="view-campaign__join-code" title="Click to copy">@campaignObj.JoinCode</p>
                        </div>
                    </div>
                    <h3>Party Members</h3>
                    @{
                        if (!campaignObj.UserCharacterPairs.Any())
                        {
                            <p>There are currently no party members.</p>
                        }
                        else
                        {
                            <ul>
                                @{
                                    foreach (var pair in campaignObj.UserCharacterPairs)
                                    {
                                        var player = persister.Get<UserObject>(pair.UserGuid);
                                        var associatedCharacterName = persister.Get<CharacterObject>(pair.CharacterGuid)?.Name ?? "N/A";
                                        <li>
                                            <div style="display: flex; align-items: center">
                                                @player.FullName (<a href="/Character/ViewDetails?characterGuid=@pair.CharacterGuid">@associatedCharacterName</a>)
                                                @{
                                                    if (player.Guid == userGuid)
                                                    {
                                                        <button class="view-campaign__add-character">Add</button>
                                                    }
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        }
                    }
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <h3>Description</h3>
                        <button class="view-campaign__toggle-desc">Show</button>
                    </div>
                    <p class="view-campaign__desc">@campaignObj.Description</p>
                    @{
                        if (campaignObj.Information?.Trim().Length > 0)
                        {
                            <div style="display: flex; align-items: center; justify-content: space-between;">
                                <h3>Information</h3>
                                <button class="view-campaign__toggle-info">Show</button>
                            </div>
                            <p class="view-campaign__info">@campaignObj.Information</p>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="column">
            <div class="banner second">
                <div class="banner-content">
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <h3>Notes</h3>
                        <button class="view-campaign__add-note">Create</button>
                    </div>
                    @{
                        if (!campaignObj.NoteGuids.Any())
                        {
                            <p>There are currently no notes for you to view.</p>
                        }
                        else 
                        {
                            var firstForYou = false;
                            var firstForOthers = false;
                            foreach (var noteGuid in campaignObj.NoteGuids)
                            {
                                var note = persister.Get<NoteObject>(noteGuid);
                                var author = persister.Get<UserObject>(note.AuthorGuid);
                                if (!firstForYou)
                                {
                                    <h4>For You</h4>
                                    firstForYou = true;
                                }
                                if (note.AuthorGuid != userGuid && (note.SharedWithGuids.Contains(userGuid) || note.SharedWithAll))
                                {
                                    <div class="view-campaign__note" guid="@noteGuid"  author="@note.AuthorGuid">
                                        <h5>From @(persister.Get<UserObject>(note.AuthorGuid).FullName):</h5>
                                        <p>@note.Contents</p>
                                    </div>
                                }
                                if (!firstForOthers)
                                {
                                    <h4>For Others</h4>
                                    firstForOthers = true;
                                }
                                if (note.AuthorGuid == userGuid)
                                {
                                    var recipients = string.Join(", ", note.SharedWithGuids.Select(_ => persister.Get<UserObject>(_).FullName).ToList());
                                    <div class="view-campaign__note author-note" guid="@noteGuid" author="@note.AuthorGuid">
                                        <h5>For @recipients:</h5>
                                        <p>@note.Contents</p>
                                    </div>
                                }
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="column-container full-height" id="view-campaign__mobile">
        <div class="column">
            <div class="banner with-top-bot-margins">
                <div class="banner-content">
                    <div class="column-container no-gutters">
                        <div class="column no-gutters">
                            <h3>Campaign</h3>
                            <p>@campaignObj.Name</p>
                        </div>
                        <div class="column no-gutters text-right">
                            <h3>Join Code</h3>
                            <p class="view-campaign__join-code" title="Click to copy">@campaignObj.JoinCode</p>
                        </div>
                    </div>
                    <h3>Party Members</h3>
                    @{
                        if (!campaignObj.UserCharacterPairs.Any())
                        {
                            <p>There are currently no party members.</p>
                        }
                        else
                        {
                            <ul>
                                @{
                                    foreach (var pair in campaignObj.UserCharacterPairs)
                                    {
                                        var player = persister.Get<UserObject>(pair.UserGuid);
                                        var associatedCharacterName = persister.Get<CharacterObject>(pair.CharacterGuid)?.Name ?? "N/A";
                                        <li>
                                            <div style="display: flex; align-items: center">
                                                @player.FullName (<a href="/Character/ViewDetails?characterGuid=@pair.CharacterGuid">@associatedCharacterName</a>)
                                                @{
                                                    if (player.Guid == userGuid)
                                                    {
                                                        <button class="view-campaign__add-character">Add</button>
                                                    }
                                                }
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        }
                    }
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <h3>Description</h3>
                        <button class="view-campaign__toggle-desc">Show</button>
                    </div>
                    <p class="view-campaign__desc">@campaignObj.Description</p>
                    @{
                        if (campaignObj.Information?.Trim().Length > 0)
                        {
                            <div style="display: flex; align-items: center; justify-content: space-between;">
                                <h3>Information</h3>
                                <button class="view-campaign__toggle-info">Show</button>
                            </div>
                            <p class="view-campaign__info">@campaignObj.Information</p>
                        }
                    }
                </div>
            </div>
            <div class="banner second with-top-bot-margins">
                <div class="banner-content">
                    <div style="display: flex; align-items: center; justify-content: space-between;">
                        <h3>Notes</h3>
                        <button class="view-campaign__add-note">Create</button>
                    </div>
                    @{
                        if (!campaignObj.NoteGuids.Any())
                        {
                            <p>There are currently no notes for you to view.</p>
                        }
                        else
                        {
                            bool firstForYou = false;
                            bool firstForOthers = false;
                            foreach (var noteGuid in campaignObj.NoteGuids)
                            {
                                var note = persister.Get<NoteObject>(noteGuid);
                                var author = persister.Get<UserObject>(note.AuthorGuid);
                                if (!firstForYou)
                                {
                                    <h4>For You</h4>
                                    firstForYou = true;
                                }
                                if (note.AuthorGuid != userGuid && (note.SharedWithGuids.Contains(userGuid) || note.SharedWithAll))
                                {
                                    <div class="view-campaign__note" guid="@noteGuid" author="@note.AuthorGuid">
                                        <h5>From @(persister.Get<UserObject>(note.AuthorGuid).FullName):</h5>
                                        <p>@note.Contents</p>
                                    </div>
                                }
                                if (!firstForOthers)
                                {
                                    <h4>For Others</h4>
                                    firstForOthers = true;
                                }
                                if (note.AuthorGuid == userGuid)
                                {
                                    var recipients = string.Join(", ", note.SharedWithGuids.Select(_ => persister.Get<UserObject>(_).FullName).ToList());
                                    <div class="view-campaign__note author-note" guid="@noteGuid" author="@note.AuthorGuid">
                                        <h5>For @recipients:</h5>
                                        <p>@note.Contents</p>
                                    </div>
                                }
                            }
                        }
                    }
                </div>
            </div>
            @{
                if (campaignObj.DungeonMasterGuid == userGuid)
                {
                    <div class="mobile-buttons-container">
                        <button class="dm-button full-width thick" type="button">
                            Dungeon Master
                        </button>
                    </div>
                }
            }
        </div>
    </div>
    @{
        if (campaignObj.DungeonMasterGuid == userGuid)
        {
            <div class="buttons-container">
                <button class="dm-button medium" type="button">
                    Dungeon Master
                </button>
            </div>
        }
    }
</div>

@section Scripts
{
    <script>
        $('.view-campaign__note').click(function () {
            console.log('@userGuid');
            console.log($(this).attr('author'));
            if ($(this).attr('author') == '@userGuid') {
                window.location.href = '/Campaign/Note?campaignGuid=@campaignGuid&noteGuid=' + $(this).attr('guid');
            }
        });
        $('.view-campaign__add-character').click(function() {
            window.location.href = '/Character/Add?campaignGuid=@campaignGuid';
        });
        $('.view-campaign__toggle-desc').click(function() {
            var description = $('.view-campaign__desc');
            if (description.is(':visible')) {
                $(this).text('Show');
                description.slideUp(300);
            } else {
                $(this).text('Hide');
                description.slideDown(300);
            }
        });
        $('.view-campaign__toggle-info').click(function() {
            var info = $('.view-campaign__info');
            if (info.is(':visible')) {
                $(this).text('Show');
                info.slideUp(300);
            } else {
                $(this).text('Hide');
                info.slideDown(300);
            }
        });
        $('.view-campaign__add-note').click(function() {
            window.location.href = '/Campaign/Note?campaignGuid=@campaignGuid';
        });
        function copyToClipboard(element) {
            var $temp = $("<input>");
            $("body").append($temp);
            $temp.val($(element).text()).select();
            document.execCommand("copy");
            $temp.remove();
        }
        $('.view-campaign__join-code').click(function() {
            copyToClipboard('.view-campaign__join-code');
            notify.me({
                class: cornerPopupClasses,
                subheader: 'Copied',
                forceOnTop: true,
                handleAsStack: true,
                buttons: [],
                fadeInDuration: 100,
                fadeOutDuration: 100,
                timeout: 1000,
                targetSelector: '#notify-queue',
                targetMethod: 'prepend',
                sound: 'default'
            });
        })
        $('.dm-button').click(function() {
            window.location.href = '/Campaign/DungeonMaster?campaignGuid=@campaignGuidStr';
        });
        var buttons = $('.buttons-container');
        var footer = $('#main-footer');
        var footerHeight = footer.outerHeight();
        var handleScroll = () => {
            var bottom = $(document).height() - ($(document).scrollTop() + $(window).height());
            if ($(document).height() === $(window).height() || bottom <= footerHeight)
                buttons.css({
                    transform: `translateY(${-1 * (footerHeight - bottom)}px)`
                });
            else if (bottom > footerHeight)
                buttons.css({
                    transform: 'unset'
                });
        };
        handleScroll();
        $(document).scroll(handleScroll);
        $(window).resize(handleScroll);
    </script>
}
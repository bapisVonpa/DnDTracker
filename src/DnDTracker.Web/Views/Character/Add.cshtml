@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "Add Character to Campaign";

    var persister = Singleton.Get<DynamoDbPersister>();
    var characterService = Singleton.Get<CharacterService>();
    var campaignGuidStr = Context.Request.Query["campaignGuid"][0];
    Guid.TryParse(campaignGuidStr, out var campaignGuid);
    var userGuidStr = Singleton.Get<SessionService>().Get("UserGuid", "", HttpContextAccessor);
    Guid.TryParse(userGuidStr, out var userGuid);
    var characters = new List<CharacterObject>();
    if (userGuid != Guid.Empty)
    {
        characters = characterService.GetByUserGuid(userGuid);
    }
}

<div id="add-character-page">
    <h2 class="text-center">Add a Character</h2>
    <div class="column-container full-height">
        <div class="column">
            <h2>Your Characters</h2>
            <div style="display: flex; flex-wrap: wrap; justify-content: center;">
                @{
                    foreach (var character in characters)
                    {
                        <div class="add-character__character">
                            <a class="add-character__character-anchor" guid="@character.Guid">
                                <div class="banner second">
                                    <div class="banner-content">
                                        <h2 class="text-center">@character.Name</h2>
                                        <h5>Race</h5>
                                        <p>@string.Join(' ', Regex.Split(character.RaceType.ToString(), @"(?<!^)(?=[A-Z])"))</p>
                                        <h5>Background</h5>
                                        <p>@string.Join(' ', Regex.Split(character.BackgroundType.ToString(), @"(?<!^)(?=[A-Z])"))</p>
                                        <h5>Class</h5>
                                        <p>@string.Join(' ', Regex.Split(character.ClassType.ToString(), @"(?<!^)(?=[A-Z])"))</p>
                                        <h5>SubClass</h5>
                                        <p>@string.Join(' ', Regex.Split(character.SubClassType.ToString(), @"(?<!^)(?=[A-Z])"))</p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
            </div>
            @{
                if (!characters.Any())
                {
                    <p>You currently do not have any characters.</p>
                }
            }
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $('.add-character__character-anchor').click(function () {
            var model = {
                CampaignGuid: '@campaignGuid',
                CharacterGuid: $(this).attr('guid')
            };
            network.post('/Campaign/AddCharacter', model, json => {
                switch (json.response) {
                    case 'ok':
                        window.location.href = '/Campaign/ViewDetails?campaignGuid=@campaignGuid';
                        break;
                    case 'err':
                        notify.me({
                            class: centerPopupClasses,
                            header: 'Uh Oh',
                            subheader: 'Failed to Add Character',
                            body: json.message,
                            buttons: [{
                                text: 'OK',
                                action: () => { },
                                close: true
                            }],
                            closeButton: false,
                            fadeInDuration: 200,
                            fadeOutDuration: 300,
                            sound: 'default',
                            onStartClose: () => {
                                notify.overlay(false);
                            }
                        });
                        notify.overlay(true);
                        break;
                }
            });
        });
    </script>
}